#!/usr/bin/env python

""" Runs Rtabmap through subprocess for environment mapping
 Created: 2/9/2022
"""

__author__ = "Mike Hagenow"

import rospy
import time
from std_msgs.msg import String, Float64
from panda_ros_msgs.msg import HybridPose
from tf2_msgs.msg import TFMessage
from scipy.spatial.transform import Rotation
import numpy as np
import rosbag
import rospkg
import subprocess32

class EnvMapping:
    def __init__(self):
        rospy.init_node('env_mapping')
        now = datetime.now()
        self._p = None

        # Subscribe to start/stop mapping
        rospy.Subscriber("mappingToggle", String, self.mappingToggle)

        # rospack = rospkg.RosPack()
        # root_dir = rospack.get_path('corrective_shared_autonomy')

    def mappingToggle(self,data):
        if data.data == "on":
            startMapping()
        elif data.data == "off":
            stopMapping()

    def startMapping(self):
        if not self._p is None:
            self._p.kill()
        self._p = subprocess32.Popen(["roslaunch", "Azure_Kinect_ROS_Driver", "mapping_rtabmap.launch"])
       
    def stopMapping(self):
        if self._p is None:
            self._p.terminate()


    # TODO:
    # 1. odom topic from panda location (remap topic)
    # 2. send map to rviz (occasionally)
    # 3. on stop, call out to create planes


       
if __name__ == "__main__":
    mapper = EnvMapping()
    rospy.spin()





