#!/usr/bin/env python
from typing import Callable
import rospy
from geometry_msgs.msg import Twist, PoseStamped
from sensor_msgs.msg import Joy
import tf2_geometry_msgs
import tf
from tf.transformations import *
import tf2_ros
import signal
import sys
import numpy as np

class JoyDriver(object):
    def __init__(self):
        self._twist_pub = rospy.Publisher("/spacenav/twist", Twist, queue_size=1)
        self._joy_sub = rospy.Subscriber('/joy', Joy, self.on_joy)
            
    def on_joy(self, msg):
        ax = msg.axes
        t = Twist()
        t.linear.x = ax[1]
        t.linear.y = ax[0]
        t.linear.z = (ax[2]-ax[5])/2
        t.angular.x = -ax[3]
        t.angular.y = ax[4]
        if msg.buttons[4]:
            t.angular.z = -2*np.pi
        if msg.buttons[5]:
            t.angular.z = 2*np.pi
        self._twist_pub.publish(t)
    
    def run(self):
        rospy.spin()

    def signal_handler(self, signal, frame):
        sys.exit()

if __name__ == "__main__":
    rospy.init_node('joy_driver')
    mouse_driver = JoyDriver()
    signal.signal(signal.SIGINT, mouse_driver.signal_handler)
    mouse_driver.run()
